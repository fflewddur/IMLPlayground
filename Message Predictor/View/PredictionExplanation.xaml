<UserControl x:Class="MessagePredictor.View.PredictionExplanation"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:conv="clr-namespace:MessagePredictor.Converters" 
             xmlns:local="clr-namespace:MessagePredictor.View" 
             mc:Ignorable="d" 
             d:DesignHeight="500" d:DesignWidth="500">
    <!--<ScrollViewer>-->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <StackPanel Grid.Row="0" Orientation="Vertical">
            <Label Background="{Binding MessageVM.Message.Prediction.Label.Color}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center"
                   Foreground="White" FontSize="24" Content="{Binding MessageVM.Message.Prediction.Label}" ContentStringFormat="Why {0}?"></Label>
        </StackPanel>

        <!-- Feature Pr grid -->
        <Grid Grid.Row="1" Name="FeatureGrid">
            <Grid.Background>
                    <SolidColorBrush x:Name="FeatureGridBackground" Color="White"/>
            </Grid.Background>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0" TextWrapping="Wrap" TextAlignment="Center" Margin="5 15 5 5">
                <TextBlock.Inlines>
                    <Run Text="Part 1: Important words" FontStyle="Italic" FontSize="18"/>
                    <LineBreak/>
                    <Run Text="{Binding MessageVM.Message.Prediction.FeaturePrHeader,Mode=OneWay}" FontWeight="Bold" FontSize="16"/>
                </TextBlock.Inlines>
            </TextBlock>
            
            <Border Margin="10 0 0 10" CornerRadius="20" BorderBrush="Gray" BorderThickness="1" Background="Beige"
                Grid.Row="1" HorizontalAlignment="Center" Padding="5"
                Style="{StaticResource ResourceKey=hideIfNoFeatures}">
                <ItemsControl  ItemsSource="{Binding MessageVM.Message.Prediction.EvidenceItems}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Label Foreground="{Binding Label.Color}" FontWeight="Bold" FontSize="{Binding FontSize}" Content="{Binding FeatureText}">
                                <Label.ToolTip>
                                    <Label Content="{Binding TooltipText}"/>
                                </Label.ToolTip>
                            </Label>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Border>

            <TextBlock Grid.Row="2" Margin="25 0 15 5" TextWrapping="Wrap" TextAlignment="Left"
                   Text="{Binding MessageVM.Message.Prediction.FeaturePrDesc, Mode=OneWay}" Foreground="Gray"
                   Tag="{Binding MessageVM.FeaturePrChanged, NotifyOnTargetUpdated=True}"
                   HorizontalAlignment="Left">
            </TextBlock>

            <Grid.Triggers>
                <EventTrigger RoutedEvent="Binding.TargetUpdated" >
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation
                                Storyboard.TargetName="FeatureGridBackground"
                                Storyboard.TargetProperty="Color" Duration="0:0:1.5"
                                From="White" To="Khaki" AutoReverse="True" RepeatBehavior="1x"/>
                            <ThicknessAnimation
                                Storyboard.TargetName="FeatureGrid"
                                Storyboard.TargetProperty="Margin"
                                From="0" To="80 0 -80 0" Duration="0:0:.5" BeginTime="0:0:0">
                                <ThicknessAnimation.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut"/>
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                            <ThicknessAnimation
                                Storyboard.TargetName="FeatureGrid"
                                Storyboard.TargetProperty="Margin"
                                From="80 0 -80 0" To="0" Duration="0:0:1" BeginTime="0:0:.5">
                                <ThicknessAnimation.EasingFunction>
                                    <BounceEase Bounces="2" EasingMode="EaseOut" Bounciness="2" />
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Grid.Triggers>
        </Grid>

        <StackPanel  Grid.Row="2" Margin="0 10 0 0">
            <Label FontSize="50" FontWeight="Light" Foreground="Gray" HorizontalContentAlignment="Center" Style="{StaticResource ResourceKey=hideIfNoFeatures}">AND</Label>
        </StackPanel>

        <!-- Class Pr grid -->
        <Grid Grid.Row="3" Name="ClassGrid">
            <Grid.Background>
                <SolidColorBrush x:Name="ClassGridBackground" Color="White"/>
            </Grid.Background>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="5" TextWrapping="Wrap" TextAlignment="Center"
                       Tag="{Binding MessageVM.ClassPrChanged, NotifyOnTargetUpdated=True}">
                <TextBlock.Inlines>
                    <Run Text="Part 2: Folder size" FontStyle="Italic" FontSize="18" />
                    <LineBreak/>
                    <Run Text="{Binding MessageVM.Message.Prediction.ClassPrHeader,Mode=OneWay}" FontWeight="Bold" FontSize="16"/>
                </TextBlock.Inlines>
            </TextBlock>
            
            <Label Grid.Row="1" Grid.Column="0" Content="{Binding Labels[0]}" ContentStringFormat="{}{0}:" Margin="20 0 0 0"
               HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
            <local:ClassImbalanceGraph Grid.Row="1" Grid.Column="1" Label="{Binding Labels[0]}" GraphColor="{Binding Labels[0].Color}" Margin="0">
                <local:ClassImbalanceGraph.Evidence>
                    <MultiBinding>
                        <MultiBinding.Converter>
                            <conv:DictionaryItemFromLabelConverter/>
                        </MultiBinding.Converter>
                        <Binding Path="MessageVM.Message.Prediction.EvidencePerClass" />
                        <Binding Path="Labels[0]"/>
                    </MultiBinding>
                </local:ClassImbalanceGraph.Evidence>
            </local:ClassImbalanceGraph>

            <Label Grid.Row="2" Grid.Column="0" Content="{Binding Labels[1]}" ContentStringFormat="{}{0}:" Margin="20 0 0 0"
               HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
            <local:ClassImbalanceGraph Grid.Row="2" Grid.Column="1" Label="{Binding Labels[1]}" GraphColor="{Binding Labels[1].Color}" Margin="0">
                <local:ClassImbalanceGraph.Evidence>
                    <MultiBinding>
                        <MultiBinding.Converter>
                            <conv:DictionaryItemFromLabelConverter/>
                        </MultiBinding.Converter>
                        <Binding Path="MessageVM.Message.Prediction.EvidencePerClass" />
                        <Binding Path="Labels[1]"/>
                    </MultiBinding>
                </local:ClassImbalanceGraph.Evidence>
            </local:ClassImbalanceGraph>

            <TextBlock Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Margin="25 10 15 5" TextWrapping="Wrap" 
                   Text="{Binding MessageVM.Message.Prediction.ClassPrDesc, Mode=OneWay}" Foreground="Gray">
            </TextBlock>
            <Grid.Triggers>
                <EventTrigger RoutedEvent="Binding.TargetUpdated">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation
                                Storyboard.TargetName="ClassGridBackground"
                                Storyboard.TargetProperty="Color" Duration="0:0:1.5"
                                From="White" To="Khaki" AutoReverse="True" RepeatBehavior="1x"/>
                            <ThicknessAnimation
                                Storyboard.TargetName="ClassGrid"
                                Storyboard.TargetProperty="Margin"
                                From="0" To="80 0 -80 0" Duration="0:0:.5" BeginTime="0:0:0">
                                <ThicknessAnimation.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut"/>
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                            <ThicknessAnimation
                                Storyboard.TargetName="ClassGrid"
                                Storyboard.TargetProperty="Margin"
                                From="80 0 -80 0" To="0" Duration="0:0:1" BeginTime="0:0:.5">
                                <ThicknessAnimation.EasingFunction>
                                    <BounceEase Bounces="2" EasingMode="EaseOut" Bounciness="2" />
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Grid.Triggers>
        </Grid>
        
        <StackPanel Grid.Row="4" Orientation="Vertical" Margin="0 10 0 0">
            <Label FontSize="50" FontWeight="Light" Foreground="Gray" HorizontalContentAlignment="Center">YIELDS</Label>
        </StackPanel>

        <Grid Grid.Row="5" Name="PieGrid">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="120"/>
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"
                FontWeight="Bold" Margin="25 5 5 5" Text="{Binding MessageVM.Message.Prediction.ConfidenceHeader}"
                       Tag="{Binding MessageVM.ConfChanged, NotifyOnTargetUpdated=True}"
                       TextWrapping="Wrap" TextAlignment="Center" FontSize="16"></TextBlock>
            
            <TextBlock Grid.Row="1" Grid.Column="0" TextWrapping="Wrap" Text="{Binding MessageVM.Message.Prediction.ConfidenceDesc,Mode=OneWay}" Foreground="Gray"
                       Margin="25 10 0 0"/>
            <Canvas Grid.Row="1 " Grid.Column="1" Height="100" Margin="10 5 0 10">
                <Ellipse Width="100" Height="100" Fill="{Binding Labels[0].Color}" Stroke="Black" StrokeThickness="1" Canvas.Left="0" Canvas.Top="0">
                    <Ellipse.ToolTip>
                        <Label>
                            <Label.Content>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0:0%} chance this message is about {1}">
                                            <Binding Path="MessageVM.Message.Prediction.ConfidencePieCircle"/>
                                            <Binding Path="Labels[0]"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </Label.Content>
                        </Label>
                    </Ellipse.ToolTip>
                </Ellipse>
                <Path Stroke="Black" StrokeThickness="1" Fill="{Binding Labels[1].Color}">
                    <Path.Data>
                        <PathGeometry>
                            <PathFigure StartPoint="50,0" IsClosed="True">
                                <ArcSegment
                                    Size="50,50"
                                    Point="{Binding MessageVM.Message.Prediction.ConfidencePiePoint}"
                                    IsLargeArc="{Binding MessageVM.Message.Prediction.ConfidencePieLarge}"
                                    SweepDirection="Clockwise"/>
                                <LineSegment Point="50,50"/>
                            </PathFigure>
                        </PathGeometry>
                    </Path.Data>
                    <Path.ToolTip>
                        <Label>
                            <Label.Content>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0:0%} chance this message is about {1}">
                                            <Binding Path="MessageVM.Message.Prediction.ConfidencePieSlice"/>
                                            <Binding Path="Labels[1]"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </Label.Content>
                        </Label>
                    </Path.ToolTip>
                </Path>
            </Canvas>
            <Grid.Background>
                <SolidColorBrush x:Name="PieGridBackground" Color="White"/>
            </Grid.Background>
            <Grid.Triggers>
                <EventTrigger  RoutedEvent="Binding.TargetUpdated">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation
                                Storyboard.TargetName="PieGridBackground"
                                Storyboard.TargetProperty="Color" Duration="0:0:1.5"
                                From="White" To="Khaki" AutoReverse="True" RepeatBehavior="1x"/>
                            <ThicknessAnimation
                                Storyboard.TargetName="PieGrid"
                                Storyboard.TargetProperty="Margin"
                                From="0" To="80 0 -80 0" Duration="0:0:.5" BeginTime="0:0:0">
                                <ThicknessAnimation.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut"/>
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                            <ThicknessAnimation
                                Storyboard.TargetName="PieGrid"
                                Storyboard.TargetProperty="Margin"
                                From="80 0 -80 0" To="0" Duration="0:0:1" BeginTime="0:0:.5">
                                <ThicknessAnimation.EasingFunction>
                                    <BounceEase Bounces="2" EasingMode="EaseOut" Bounciness="2" />
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Grid.Triggers>
        </Grid>

    </Grid>
</UserControl>
